// Generated by data binding compiler. Do not edit!
package xyz.gillall.demoapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import java.lang.Deprecated;
import java.lang.Object;
import xyz.gillall.demoapp.R;
import xyz.gillall.demoapp.model.sd.SDEvent;

public abstract class FragmentEventViewerBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final ImageView imageCheckin;

  @NonNull
  public final ImageView imageShare;

  @NonNull
  public final ImageView imageViewViewer;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextView textView1;

  @NonNull
  public final TextView txtTitle;

  @Bindable
  protected SDEvent mEvent;

  @Bindable
  protected String mDefimage;

  protected FragmentEventViewerBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout constraintLayout, ImageView imageCheckin, ImageView imageShare,
      ImageView imageViewViewer, NestedScrollView nestedScrollView, TextView textView1,
      TextView txtTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.constraintLayout = constraintLayout;
    this.imageCheckin = imageCheckin;
    this.imageShare = imageShare;
    this.imageViewViewer = imageViewViewer;
    this.nestedScrollView = nestedScrollView;
    this.textView1 = textView1;
    this.txtTitle = txtTitle;
  }

  public abstract void setEvent(@Nullable SDEvent event);

  @Nullable
  public SDEvent getEvent() {
    return mEvent;
  }

  public abstract void setDefimage(@Nullable String defimage);

  @Nullable
  public String getDefimage() {
    return mDefimage;
  }

  @NonNull
  public static FragmentEventViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_event_viewer, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentEventViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentEventViewerBinding>inflateInternal(inflater, R.layout.fragment_event_viewer, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentEventViewerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_event_viewer, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentEventViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentEventViewerBinding>inflateInternal(inflater, R.layout.fragment_event_viewer, null, false, component);
  }

  public static FragmentEventViewerBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentEventViewerBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentEventViewerBinding)bind(component, view, R.layout.fragment_event_viewer);
  }
}
